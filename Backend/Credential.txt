
AVANT TOUT, LANCEMENT en BACKEND du SERVEUR de BASE de DONNEES :
 say24ila@LAPTOP-TON9F1BU:/mnt/c/Users/kabuk/OPENCLRM-2024/Projet-3/Architecte/Backend$ npm start
email: sophie.bluel@test.tld

password: S0phie 

token : example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1MTg3NDkzOSwiZXhwIjoxNjUxOTYxMzM5fQ.JGN1p8YIfR-M-5eQ-Ypy6Ima5cKA4VbfL2xMr2MgHm4
        
curl -X 'POST' \
  'http://localhost:5678/api/users/login' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "email": "sophie.bluel@test.tld",
  "password": "S0phie"
}'

Dans la requete JS : fetch('http://localhost:5678/api/users/login', {method: "POST", 
headers: { "Content-Type": "application/json" }, body: '{"commentaire": "Top produit !" }); 

fetch("/pieces/1/avis", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: '{"email": "sophie.bluel@test.tld" , "password": "S0phie"}'
});



mmmmmmmmmmmmmmmmmmmmm

async function initAdmin() {
    let userAdmin = window.localStorage.getItem('user');
    if (!userAdmin) { // Si userAdmin n'est pas dans le localStorage
        const response = await fetch("http://localhost:5678/api/users/login", { 
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email: "sophie.bluel@test.tld", password: "S0phie" }),
        });
        const userData = await response.json(); // Parse JSON
        window.localStorage.setItem("user", JSON.stringify(userData));
        userAdmin = userData;
    } else {
        userAdmin = JSON.parse(userAdmin); // Parse JSON depuis le localStorage
    }
    console.log("Valeurs de Token Admin :", userAdmin);
    return userAdmin;
}

const formulaire = document.getElementById("formule");
formulaire.addEventListener("submit", async function(event) {
    event.preventDefault(); // Empêche le comportement par défaut du formulaire
    
    await initAdmin(); // Attendre que initAdmin() soit exécuté

    const emel = document.getElementById("email").value.trim();
    const passwd = document.getElementById("passwd").value.trim();

    const response = await fetch("http://localhost:5678/api/users/login", { 
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email: emel, password: passwd }),
    });

    const userLogin = await response.json(); // Parse JSON
    const userAdmin = JSON.parse(window.localStorage.getItem("user"));

    console.log("Valeurs de Token Login :", userLogin);

    if (userLogin.token === userAdmin.token) { // Vérification des tokens
        console.log("Email ou mot de passe correct !");
        document.getElementById("errorMessage").textContent = "Connexion réussie.";
    } else {
        document.getElementById("errorMessage").textContent = "Email ou mot de passe invalide.";
    }
});


********************************************

<!DOCTYPE html>
<html>
<head>
<title>Font Awesome 5 Icons</title>
<meta name='viewport' content='width=device-width, initial-scale=1'>
<script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
<!--Get your own code at fontawesome.com-->
</head>
<body>

<h1>fas fa-edit</h1>

<i class='fas fa-edit'></i>
<i class='fas fa-edit' style='font-size:24px'></i>
<i class='fas fa-edit' style='font-size:36px'></i>
<i class='fas fa-edit' style='font-size:48px;color:red'></i>
<br>

<p>Used on a button:</p>
<button style='font-size:24px'>Button <i class='fas fa-edit'></i></button>

<p>Unicode:</p>
<i style='font-size:24px' class='fas'>&#xf044;</i>

</body>
</html>
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm


   
    .gallery {
	width: 100%;
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	grid-column-gap: 20px;
	grid-row-gap: 20px;
}

.gallery img {
	width: 100%;

}
    